package com.icinfo.frk.business.controller;

import com.icinfo.framework.core.web.BaseController;
import com.icinfo.framework.mybatis.pagehelper.datatables.PageRequest;
import com.icinfo.framework.mybatis.pagehelper.datatables.PageResponse;
import com.icinfo.frk.business.model.DataImplVaild;
import com.icinfo.frk.business.service.DataShareService;
import com.icinfo.frk.support.Constants;
import com.icinfo.frk.support.LogTypeEnum;
import com.icinfo.frk.support.util.RequestUtil;
import com.icinfo.frk.system.model.SysUser;
import com.icinfo.frk.system.service.ISysLogService;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * 数据共享
 *
 * @author hzhb
 */
@Controller
@RequestMapping("/data/dataShare")
public class DataShareController extends BaseController {

	@Autowired
	private DataShareService dataShareService;
	@Autowired
	private ISysLogService sysLogService;
	/**
	 * 日志记录器
	 */
	private static final Logger logger = LoggerFactory
			.getLogger(DataShareController.class);

	/**
	 * 跳转到基本接口页面
	 * 
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/baseImpl")
	public String baseImpl() throws Exception {
		return "business/datashare/baseImplQuery";
	}

	/**
	 * 根据接口名去查询相对应的接口
	 */
	@RequestMapping(value = "/getBaseImpl")
	@ResponseBody
	public PageResponse<DataImplVaild> getBaseImpl(PageRequest request)
			throws Exception {
		PageResponse<DataImplVaild> list = dataShareService
				.getBaseImpl(request);
		return list;
	}

	/**
	 * 进入法人登记基本信息查询
	 */
	@RequestMapping(value = "/frDjMsgQuery")
	public String frDjMsgQuery() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了法人登记基本信息查询接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/frDjMsgQuery";
	}

	/**
	 * 进入成员单位信息查询
	 */
	@RequestMapping(value = "/cyDeptMsgQuery")
	public String cyDeptMsgQuery() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了成员单位信息查询接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/cyDeptMsgQuery";
	}

	/**
	 * 进入法人校验
	 */
	@RequestMapping(value = "/frCheck")
	public String frCheck() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了法人校验接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/frCheck";
	}
	
	/**
	 * 进入企业基本信息
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/EnterpriseInfo")
	public String EnterpriseInfo() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了企业基本信息接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/EnterpriseInfo";
	}
	
	/**
	 * 股权变更信息
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/EquityChangeInfo")
	public String EquityChangeInfo() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了企业基本信息接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/EquityChangeInfo";
	}
	
	
	/**
	 * 股东（或发起人）或投资人信息(自然人)
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/NaturalInfo")
	public String NaturalInfo() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了企业基本信息接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/NaturalInfo";
	}
	

	/**
	 * 股东（或发起人）或投资人信息(非自然人)信息
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/UnnaturalInfo")
	public String UnnaturalInfo() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了企业基本信息接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/UnnaturalInfo";
	}

	
	/**
	 * 股权出质
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/PledgedEquityInfo")
	public String PledgedEquityInfo() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了企业基本信息接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/PledgedEquityInfo";
	}

	
	/**
	 * 获取基金会法人证接口
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/FoundationLegalPersonInfo")
	public String FoundationLegalPersonInfo() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了企业基本信息接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/FoundationLegalPersonInfo";
	}

	
	/**
	 * 企业注（吊）销信息
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/CompanyRevokeInfo")
	public String CompanyRevokeInfo() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了企业基本信息接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/CompanyRevokeInfo";
	}

	/**
	 * 动产抵押权人信息
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/ChattelMortgageCreditorInfo")
	public String ChattelMortgageCreditorInfo() throws Exception {
		try {
			sysLogService.save(
					LogTypeEnum.SEARCH.toString(),
					"访问了企业基本信息接口详情  用户名："
							+ ((SysUser) RequestUtil.getSession().getAttribute(
									Constants.SESSION_LOG_KEY)).getUsername());
		} catch (Exception e) {
			return "redirect:/";
		}
		return "business/datashare/ChattelMortgageCreditorInfo";
	}
}
