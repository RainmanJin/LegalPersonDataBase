/*
 * Copyright© 2003-2016 浙江汇信科技有限公司, All Rights Reserved. 
 */
package com.icinfo.frk.search.service.impl;

import com.icinfo.framework.core.service.support.MyBatisServiceSupport;
import com.icinfo.framework.mybatis.pagehelper.PageHelper;
import com.icinfo.framework.mybatis.pagehelper.datatables.PageRequest;
import com.icinfo.framework.mybatis.pagehelper.datatables.PageResponse;
import com.icinfo.frk.business.dto.InsuranceCountDto;
import com.icinfo.frk.business.mapper.CfBxSbxxValidMapper;
import com.icinfo.frk.business.mapper.CfGgzfWxdValidMapper;
import com.icinfo.frk.business.mapper.CfGgzfZyxxValidMapper;
import com.icinfo.frk.business.mapper.CfSbCdhbxxValidMapper;
import com.icinfo.frk.business.mapper.CfSsNsjlDsValidMapper;
import com.icinfo.frk.business.mapper.CfSsNsjlGsValidMapper;
import com.icinfo.frk.business.mapper.CfSsSwdjxxValidMapper;
import com.icinfo.frk.business.model.CfGgzfWxdValid;
import com.icinfo.frk.business.model.CfGgzfZyxxValid;
import com.icinfo.frk.business.model.CfSbCdhbxxValid;
import com.icinfo.frk.business.model.CfSsNsjlDsValid;
import com.icinfo.frk.business.model.CfSsNsjlGsValid;
import com.icinfo.frk.business.model.CfSsSwdjxxValid;
import com.icinfo.frk.business.model.InsuranceCount;
import com.icinfo.frk.common.utils.AESEUtil;
import com.icinfo.frk.search.service.ITaxSearchService;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * 描述:    Service 对应的Service接口实现类.<br>
 *
 * @author framework generator
 * @date 2017年07月18日
 */
@Service("TaxSearchService")
public class TaxSearchServiceImpl extends MyBatisServiceSupport implements ITaxSearchService {

  @Autowired
  private CfSsSwdjxxValidMapper cfSsSwdjxxValidMapper;
  @Autowired
  private CfSsNsjlGsValidMapper cfSsNsjlGsValidMapper;
  @Autowired
  private CfSsNsjlDsValidMapper cfSsNsjlDsValidMapper;
  @Autowired
  private CfSbCdhbxxValidMapper cfSbCdhbxxValidMapper;
  @Autowired
  private CfGgzfZyxxValidMapper cfGgzfZyxxValidMapper;
  @Autowired
  private CfGgzfWxdValidMapper cfGgzfWxdValidMapper;
  @Autowired
  private CfBxSbxxValidMapper cfBxSbxxValidMapper;


  /**
   * 国税交费情况
   */
  @Override
  public PageResponse<CfSsNsjlGsValid> getDetail0(PageRequest request) throws Exception {
    PageHelper.startPage(request.getPageNum(), request.getLength());
    List<CfSsNsjlGsValid> list = cfSsNsjlGsValidMapper.selectListByMap(request.getParams());
    for (CfSsNsjlGsValid dto : list) {
      String corpid = dto.getFrwybs();
      if (null != corpid && !"".equals(corpid)) {
        String frwybs = AESEUtil.encodeCorpid(corpid);
        dto.setFrwybs(frwybs);
      }
    }
    return new PageResponse<CfSsNsjlGsValid>(list);
  }


  /**
   * 地税交费情况
   */
  @Override
  public PageResponse<CfSsNsjlDsValid> getDetail1(PageRequest request)
      throws Exception {
    PageHelper.startPage(request.getPageNum(), request.getLength());
    List<CfSsNsjlDsValid> list = cfSsNsjlDsValidMapper.selectListByMap(request.getParams());
    for (CfSsNsjlDsValid dto : list) {
      String corpid = dto.getFrwybs();
      if (null != corpid && !"".equals(corpid)) {
        String frwybs = AESEUtil.encodeCorpid(corpid);
        dto.setFrwybs(frwybs);
      }
    }
    return new PageResponse<CfSsNsjlDsValid>(list);
  }

  /**
   * 纳税非正常户认定情况
   */
  public PageResponse<CfSsSwdjxxValid> getDetail2(PageRequest request)
      throws Exception {
    PageHelper.startPage(request.getPageNum(), request.getLength());
    List<CfSsSwdjxxValid> list = cfSsSwdjxxValidMapper.selectListByMap(request.getParams());
    for (CfSsSwdjxxValid dto : list) {
      String corpid = dto.getFrwybs();
      if (null != corpid && !"".equals(corpid)) {
        String frwybs = AESEUtil.encodeCorpid(corpid);
        dto.setFrwybs(frwybs);
      }
    }
    return new PageResponse<CfSsSwdjxxValid>(list);
  }

  /**
   * 船东互保情况
   */
  public PageResponse<CfSbCdhbxxValid> getDetail3(PageRequest request)
      throws Exception {
    PageHelper.startPage(request.getPageNum(), request.getLength());
    List<CfSbCdhbxxValid> list = cfSbCdhbxxValidMapper.selectListByMap(request.getParams());
    for (CfSbCdhbxxValid dto : list) {
      String corpid = dto.getFrwybs();
      if (null != corpid && !"".equals(corpid)) {
        String frwybs = AESEUtil.encodeCorpid(corpid);
        dto.setFrwybs(frwybs);
      }
    }
    return new PageResponse<CfSbCdhbxxValid>(list);
  }

  /**
   * 用电缴费情况
   */
  public PageResponse<CfGgzfZyxxValid> getDetail4(PageRequest request)
      throws Exception {
    PageHelper.startPage(request.getPageNum(), request.getLength());
    List<CfGgzfZyxxValid> list = cfGgzfZyxxValidMapper.selectListByMap(request.getParams());
    for (CfGgzfZyxxValid dto : list) {
      String corpid = dto.getFrwybs();
      if (null != corpid && !"".equals(corpid)) {
        String frwybs = AESEUtil.encodeCorpid(corpid);
        dto.setFrwybs(frwybs);
      }
    }
    return new PageResponse<CfGgzfZyxxValid>(list);
  }

  /**
   * 无线电频率占用费缴费情况
   */
  public PageResponse<CfGgzfWxdValid> getDetail5(PageRequest request)
      throws Exception {
    PageHelper.startPage(request.getPageNum(), request.getLength());
    List<CfGgzfWxdValid> list = cfGgzfWxdValidMapper.selectListByMap(request.getParams());
    for (CfGgzfWxdValid dto : list) {
      String corpid = dto.getFrwybs();
      if (null != corpid && !"".equals(corpid)) {
        String frwybs = AESEUtil.encodeCorpid(corpid);
        dto.setFrwybs(frwybs);
      }
    }
    return new PageResponse<CfGgzfWxdValid>(list);
  }

  @Override
  public PageResponse<InsuranceCountDto> getDetail6(PageRequest request) throws Exception {
    PageHelper.startPage(request.getPageNum(), request.getLength());
    List<InsuranceCountDto> list = cfBxSbxxValidMapper.selectDtoByFrwybs(request.getParams());
    for (InsuranceCountDto dto : list) {
      String corpid = dto.getFrwybs();
      List<InsuranceCountDto> temp = cfBxSbxxValidMapper.selectCountByFrwybs(corpid);
      if (temp.size() > 0) {
        InsuranceCountDto dtoTemp = temp.get(0);
        dto.setGjj_count(dtoTemp.getGjj_count());
        dto.setGs_count(dtoTemp.getGs_count());
        dto.setSye_count(dtoTemp.getSye_count());
        dto.setSyu_count(dtoTemp.getSyu_count());
        dto.setYb_count(dtoTemp.getYb_count());
        dto.setYl_count(dtoTemp.getYl_count());
      }
      if (null != corpid && !"".equals(corpid)) {
        String frwybs = AESEUtil.encodeCorpid(corpid);
        dto.setFrwybs(frwybs);
      }
    }
    return new PageResponse<InsuranceCountDto>(list);
  }


}