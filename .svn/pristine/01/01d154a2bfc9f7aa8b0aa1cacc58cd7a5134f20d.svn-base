/*
 * Copyright© 2003-2016 浙江汇信科技有限公司, All Rights Reserved. 
 */
package com.icinfo.frk.business.controller;

import com.icinfo.framework.core.web.BaseController;
import com.icinfo.frk.business.service.IPageLoadingService;
import com.icinfo.frk.common.utils.AESEUtil;
import com.icinfo.frk.support.Constants;
import com.icinfo.frk.support.LogTypeEnum;
import com.icinfo.frk.support.util.RequestUtil;
import com.icinfo.frk.system.model.SysUser;
import com.icinfo.frk.system.service.ISysLogService;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

/**
 * 描述:  ca_dj_jbxx 对应的Controller类.<br>
 *
 * @author framework generator
 * @date 2017年06月27日
 */
@Controller
@RequestMapping("/data/frdetail")
public class PageLoadingController extends BaseController {

  /**
   * 日志记录器
   */
  private static final Logger logger = LoggerFactory.getLogger(PageLoadingController.class);

  @Autowired
  private IPageLoadingService pageLoadingService;
  @Autowired
  private ISysLogService sysLogService;

  /**
   * 许可、资质与荣誉
   *
   * @param frwybs 法人唯一标识
   * @param model model
   */
  @RequestMapping(value = "/admission/{frwybs}", method = RequestMethod.GET)
  public String entAdmission(@PathVariable(value = "frwybs") String frwybs, Model model)
      throws Exception {
    model.addAttribute("frwybs", frwybs);
    frwybs = AESEUtil.decodeCorpid(frwybs);
    model.addAttribute("xkxx", pageLoadingService.getCaDjJbxxInfo(frwybs)); 
	try {
	   sysLogService.save(
				LogTypeEnum.SEARCH.toString(),
				"访问了法人库许可、资质与荣誉详情页面  用户名："
						+ ((SysUser) RequestUtil.getSession().getAttribute(
								Constants.SESSION_LOG_KEY)).getUsername());
	} catch (Exception e) {
		return "redirect:/";
	}
    return "business/dataquery/frAdmission";
  }

  /**
   * 进入页
   *
   * @param frwybs 法人唯一标识
   * @param model model
   */
  @RequestMapping(value = "/comment/{frwybs}", method = RequestMethod.GET)
  public String entComment(@PathVariable(value = "frwybs") String frwybs, Model model)
      throws Exception {
    model.addAttribute("frwybs", frwybs);
    frwybs = AESEUtil.decodeCorpid(frwybs);
    model.addAttribute("comment", pageLoadingService.getCaDjJbxxInfo(frwybs));
    return "business/dataquery/frComment";
  }

  /**
   * 行政执法
   *
   * @param frwybs 法人唯一标识
   * @param model model
   */
  @RequestMapping(value = "/lawenforce/{frwybs}", method = RequestMethod.GET)
  public String entLawEnforce(@PathVariable(value = "frwybs") String frwybs, Model model)
      throws Exception {
    model.addAttribute("frwybs", frwybs);
    frwybs = AESEUtil.decodeCorpid(frwybs);
    model.addAttribute("lawenforce", pageLoadingService.getCaDjJbxxInfo(frwybs));
    try {
    	 sysLogService.save(
    				LogTypeEnum.SEARCH.toString(),
    				"访问了法人库行政执法详情页面  用户名："
    						+ ((SysUser) RequestUtil.getSession().getAttribute(
    								Constants.SESSION_LOG_KEY)).getUsername());
	} catch (Exception e) {
		return "redirect:/";
	}
   
    return "business/dataquery/frLawEnforce";
  }

  /**
   * 司法信息
   *
   * @param frwybs 法人唯一标识
   * @param model model
   */
  @RequestMapping(value = "/lawinfo/{frwybs}", method = RequestMethod.GET)
  public String entLawInfo(@PathVariable(value = "frwybs") String frwybs, Model model)
      throws Exception {
    model.addAttribute("frwybs", frwybs);
    frwybs = AESEUtil.decodeCorpid(frwybs);
    model.addAttribute("frwybss", frwybs);
    model.addAttribute("lawinfo", pageLoadingService.getCaDjJbxxInfo(frwybs));
    try {
    	sysLogService.save(
    			LogTypeEnum.SEARCH.toString(),
    			"访问了法人库司法信息详情页面  用户名："
    					+ ((SysUser) RequestUtil.getSession().getAttribute(
    							Constants.SESSION_LOG_KEY)).getUsername());
	} catch (Exception e) {
		return "redirect:/";
	}
    
    return "business/dataquery/frLawInfo";
  }

  /**
   *生产经营
   *
   * @param frwybs 法人唯一标识
   * @param model model
   */
  @RequestMapping(value = "/produce/{frwybs}", method = RequestMethod.GET)
  public String entProduce(@PathVariable(value = "frwybs") String frwybs, Model model)
      throws Exception {
    model.addAttribute("frwybs", frwybs);
    frwybs = AESEUtil.decodeCorpid(frwybs);
    model.addAttribute("frwybss", frwybs);
    model.addAttribute("produce", pageLoadingService.getCaDjJbxxInfo(frwybs));
    try {
    	sysLogService.save(
    			LogTypeEnum.SEARCH.toString(),
    			"访问了法人库生产经营详情页面  用户名："
    					+ ((SysUser) RequestUtil.getSession().getAttribute(
    							Constants.SESSION_LOG_KEY)).getUsername());
	} catch (Exception e) {
		return "redirect:/";
	}
    
    return "business/dataquery/frProduce";
  }

  /**
   * 纳税、参保与缴费
   *
   * @param frwybs 法人唯一标识
   * @param model model
   */
  @RequestMapping(value = "/tax/{frwybs}", method = RequestMethod.GET)
  public String entTax(@PathVariable(value = "frwybs") String frwybs, Model model)
      throws Exception {
    model.addAttribute("frwybs", frwybs);
    if (null != frwybs && !"".equals(frwybs)) {
      frwybs = AESEUtil.decodeCorpid(frwybs);
      model.addAttribute("tax", pageLoadingService.getCaDjJbxxInfo(frwybs));
    }
    try {
    	 sysLogService.save(
    				LogTypeEnum.SEARCH.toString(),
    				"访问了法人库纳税、参保与缴费详情页面  用户名："
    						+ ((SysUser) RequestUtil.getSession().getAttribute(
    								Constants.SESSION_LOG_KEY)).getUsername());
	} catch (Exception e) {
		return "redirect:/";
	}
   
    return "business/dataquery/frTax";
  }

  @RequestMapping(value = "/encode/{frwybs}", method = RequestMethod.GET)
  public String entSecurity(@PathVariable(value = "frwybs") String frwybs, Model model)
      throws Exception {
    frwybs = AESEUtil.encodeCorpid(frwybs);
    model.addAttribute("frwybs", frwybs);
    return "common/decode";
  }

  @RequestMapping(value = "/decode/{frwybs}", method = RequestMethod.GET)
  public String dentSecurity(@PathVariable(value = "frwybs") String frwybs, Model model)
      throws Exception {
    frwybs = AESEUtil.decodeCorpid(frwybs);
    model.addAttribute("frwybs", frwybs);
    return "common/decode";
  }

}